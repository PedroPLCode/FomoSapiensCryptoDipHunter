"""
Django settings for FomoSapiensCryptoDipHunter project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d=-vd-u-c52aaa_aq45oo@!dvo=l3d-!$z!m&l5iam@@mqs_74'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'crispy_forms',
    "crispy_bootstrap4",
    'axes',
    'captcha',  # django-recaptcha
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'widget_tweaks',
    'fomo_sapiens',
    'analysis',
    'hunter',
    'django_cron',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'axes.middleware.AxesMiddleware',
]

ROOT_URLCONF = 'fomo_sapiens.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'fomo_sapiens.utils.context_processors.inject_date_and_time',
                'fomo_sapiens.utils.context_processors.inject_user_agent',
                'fomo_sapiens.utils.context_processors.inject_system_info',
                'fomo_sapiens.utils.context_processors.inject_system_uptime',
                'fomo_sapiens.utils.context_processors.inject_python_version',
                'fomo_sapiens.utils.context_processors.inject_django_version',
                'fomo_sapiens.utils.context_processors.inject_numpy_version',
                'fomo_sapiens.utils.context_processors.inject_pandas_version',
                'fomo_sapiens.utils.context_processors.inject_db_info',
            ],
        },
    },
]

STATIC_URL = '/static/'

# Dodaj folder z plikami CSS do STATICFILES_DIRS
STATICFILES_DIRS = [
    BASE_DIR / "static",  # Zakładając, że masz folder static w głównym katalogu projektu
]


WSGI_APPLICATION = 'fomo_sapiens.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTHENTICATION_BACKENDS = (
    'axes.backends.AxesBackend',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1
LOGIN_REDIRECT_URL = '/analysis/'

# Ustawienia allauth
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}

# Skonfiguruj, by allauth używało adresu email jako login
ACCOUNT_AUTHENTICATION_METHOD = 'username'
ACCOUNT_AUTHENTICATED_REMEMBER = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_USERNAME_REQUIRED = True

# Google OAuth2 ustawienia
SOCIALACCOUNT_LOGIN_ON_GET = True
SOCIALACCOUNT_QUERY_EMAIL = True

ACCOUNT_AUTHENTICATED_REDIRECT_URL = '/account/'

SESSION_COOKIE_AGE = 1800  # 30 minut
SESSION_SAVE_EVERY_REQUEST = True  # Resetuje licznik czasu po każdej aktywności użytkownika

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

AXES_FAILURE_LIMIT = 5  # Po 5 błędnych logowaniach użytkownik zostaje zablokowany
AXES_LOCK_OUT_AT_FAILURE = True  # Blokuje konto po przekroczeniu limitu
AXES_RESET_ON_SUCCESS = True  # Resetuje licznik po udanym logowaniu

SESSION_COOKIE_SECURE = True  # Sesje tylko przez HTTPS
SESSION_COOKIE_HTTPONLY = True  # Sesja niedostępna dla JavaScript
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Przechowywanie sesji w bazie danych

ACCOUNT_FORMS = {
#    'login': 'forms.CustomLoginForm',
    'signup': 'fomo_sapiens.forms.CustomSignupForm',
}

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get('GOOGLE_CLIENT_ID')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get('GOOGLE_SECRET_KEY')

RECAPTCHA_PUBLIC_KEY = os.environ.get('RECAPTCHA_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = os.environ.get('RECAPTCHA_PRIVATE_KEY')


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Gmail settings

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('GMAIL_USERNAME')
EMAIL_HOST_PASSWORD = os.environ.get('GMAIL_APP_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

CRONJOBS = [
    ('*/60 * * * *', 'hunter.cron.HourlyCronHunterJob'),  # Co godzinę
    ('0 */4 * * *', 'hunter.cron.FourHoursCronHunterJob'),  # Co 4 godziny
    ('0 0 * * *', 'hunter.cron.DailyCronHunterJob'),  # Codziennie o północy
]
